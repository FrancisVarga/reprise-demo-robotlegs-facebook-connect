package app.controller.startup{	import app.controller.fb.FBLoginSuccessCommand;	import app.controller.fb.FBValidateLoginCommand;
	import app.controller.ApplyURIChangeCommand;	import app.controller.ChangeURICommand;	import app.controller.fb.FBConnectCommand;	import app.events.InitialDataServiceEvent;	import app.events.URIEvent;	import app.events.fb.FBConnectEvent;	import org.robotlegs.base.ContextEvent;	import org.robotlegs.mvcs.Command;	public class PrepControllerCommand extends Command	{		/*******************************************************************************************		*								public properties										   *		*******************************************************************************************/		[Inject]		public var event : ContextEvent;						/*******************************************************************************************		*								protected/ private properties							   *		*******************************************************************************************/						/*******************************************************************************************		*								public methods											   *		*******************************************************************************************/		public function PrepControllerCommand()		{		}		override public function execute() : void		{			mapStartupControllers();			mapApplicationControllers();			mapFacebookControllers();		}				/*******************************************************************************************		*								private methods											   *		*******************************************************************************************/		private function mapStartupControllers() : void 		{			commandMap.mapEvent(InitialDataServiceEvent.DATA_LOADED,				ApplyInitialDataCommand, InitialDataServiceEvent, true);		}		private function mapApplicationControllers() : void 		{			commandMap.mapEvent(URIEvent.URI_CHANGED, ApplyURIChangeCommand, URIEvent);			commandMap.mapEvent(URIEvent.CHANGE_URI, ChangeURICommand, URIEvent);		}		private function mapFacebookControllers() : void 		{			commandMap.mapEvent(FBConnectEvent.FB_CONNECT, FBConnectCommand, FBConnectEvent);			commandMap.mapEvent(FBConnectEvent.FB_CONNECT_SUCCESS, FBLoginSuccessCommand, FBConnectEvent);			commandMap.mapEvent(FBConnectEvent.FB_VALIDATE_LOGIN, FBValidateLoginCommand, FBConnectEvent);		}	}}